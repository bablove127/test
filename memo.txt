Git
버전관리 시스템의 종류

☞버전관리
여러파일을 하나의 버전으로 묶어 관리하는 것

버전 관리 시스템의 종류
1.클라이언트 - 서버 모델
-하나의 중앙 서버로 여러 클라이언트들이 각자 필요한 것만 가져와서 작업을 하고 다시 중앙 서버로 보내서 통합하는 방식
-CVS, SVN

2. 분산 모델
-하나의 중앙 서버가 존재하지만, 여러 클라이언트들은 각자의 컴퓨터 저장소에 전체 사본을 가지고 작업하는 방식
-Git

Git의 장점
- 동시에 작업하는 사람들과 소스코드를 주고받을 필요가 없음
-같은 파일을 여러명이 동시에 병렬 개발이 가능
-변동 과정을 체계적으로 관리 할 수 있고, 언제든지 지난 시점의 버전으로 되돌릴 수 있음
-인터넷이 연결되지않은 곳에서도 개발을 진행할 수 있고, 중앙 서버의 데이터가 유실되어도 다시 복구 할 수 있음

Git 설치
-구글에서 'Git 설치'(https://git-scm.com/)
2. 왼쪽메뉴에서 다운로드 클릭
3. 오른쪽 모니터 모양 다운로드 클릭
4.64-bit for windows setting 클릭 후 다운로드 및 설치(기본 설정 설치)

Git 명령어
1.프로젝트 디렉토리 내에 로컬 저장소를 생성
   pwd : 현재 경로를 반환
   cd c:\Chaeyeon/Git (터미널용)
   ls : 현재 디렉토리 내에 디렉토리 및 파일 리스트 반환
   git init 

2. git 버전 관리할 파일을 선택(stage에 올림)
    git add index.html

3. 하나의 버전으로 만들기
    git commit -m "index.html을 커밋"

오류 날 시
$ git commit -m "index.html을 커밋"
Author identity unknown

Author identity unknown
    *** Please tell me who you are.
    Run
    git config --global user.email "you@example.com"
    git config --global user.name "Your Name"
    to set your account's default identity.
    Omit --global to set the identity only in this repository.
    fatal: unable to auto-detect email address (got 'Administrator@DESKTOP-HUJUVSS.(none)')


    git config --global user.email "@example.com"
    git config --global user.name "Your Name"

 git config --global user.email "bablove12@kakao.com"
 git config --global user.name "김채연"

성공시 
$ git commit -m "index.html을 커밋"
[master (root-commit) d10695c] index.html을 커밋
 1 file changed, 11 insertions(+)
 create mode 100644 index.html

4. 로그 확인하기
git log 치면 log가 나온다


%README.md
-깃허브에 업로드시 프로젝트 메인 설명글로 사용
-마크다운 문법으로 작성

5. 여러 파일을 함께 선택(stage에 현재 디렉토리에 있는 변화된 모든 파일)

git add .

